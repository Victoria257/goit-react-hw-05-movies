{"version":3,"file":"static/js/247.7a238b37.chunk.js","mappings":"gNA0CA,UAtCa,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UACd,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAI,mCAAG,oGACQP,EAAUI,GADlB,OACLI,EADK,OAEXL,EAAUK,EAAKD,MAFJ,2CAAH,qDAIVA,GACD,GAAE,CAACH,EAASJ,KAGX,wBACGE,GACCA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACT,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,KAGP,qCAEF,uBAAIA,KACJ,uCAAeC,OAVRF,EADA,KAgBlB,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cast = ({ fetchCast }) => {\n  const [actors, setActors] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const cast = async () => {\n      const data = await fetchCast(movieId);\n      setActors(data.cast);\n    };\n    cast();\n  }, [movieId, fetchCast]);\n\n  return (\n    <ul>\n      {actors &&\n        actors.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <p>No photo</p>\n            )}\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nCast.propTypes = {\n  fetchCast: PropTypes.func.isRequired,\n};\n\nexport default Cast;\n"],"names":["fetchCast","useState","actors","setActors","movieId","useParams","useEffect","cast","data","map","id","name","character","profile_path","src","alt"],"sourceRoot":""}