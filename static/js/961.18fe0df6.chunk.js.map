{"version":3,"file":"static/js/961.18fe0df6.chunk.js","mappings":"wNAuEA,UApEqB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,kBACtB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,6GAEOP,EAAkBI,GAFzB,OAENI,EAFM,OAIZL,EAAYK,GAJA,gDAMZC,QAAQC,IAAR,MANY,yBAQZD,QAAQC,IAAI,WARA,4EAAH,qDAWbH,GACD,GAAE,CAACP,EAAmBI,IAEvB,IAAQO,EAAuDT,EAAvDS,YAAaC,EAA0CV,EAA1CU,MAAOC,EAAmCX,EAAnCW,aAAcC,EAAqBZ,EAArBY,SAAUC,EAAWb,EAAXa,OAoBpD,OACE,iCACE,mBAAQC,QArBK,WAAQ,EAqBrB,sBACA,gBAAKC,IAAG,yCAAoCN,GAAeO,IAAKN,KAChE,wBAAKA,KACL,wCAAgBC,MAChB,uCACA,yBAAIC,EAAJ,QACA,qCACA,yBACGC,GAAUA,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,0BAAgBA,GAALD,EAA7B,OAExB,oDACA,2BACE,yBACE,SAAC,KAAD,CAASE,GAAI,OAAb,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAI,UAAb,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { NavLink, useParams, Outlet } from 'react-router-dom';\n\nconst MovieDetails = ({ fetchMovieDetalis }) => {\n  const [imagesId, setImagesId] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const detalis = async () => {\n      try {\n        const data = await fetchMovieDetalis(movieId);\n        // console.log(data);\n        setImagesId(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        console.log('final-2');\n      }\n    };\n    detalis();\n  }, [fetchMovieDetalis, movieId]);\n\n  const { poster_path, title, vote_average, overview, genres } = imagesId;\n  const onGoBack = () => {};\n\n  // const fetchMovieDetalis = async () => {\n  //   const KEY_API = '1e5d776ce781b9601a1344aa67272955';\n  //   const URL_API = 'https://api.themoviedb.org/3/';\n  //   const response = await axios.get(\n  //     `${URL_API}movie/${movieId}?api_key=${KEY_API}&language=uk&region=uk`\n  //   );\n  //   return response.data;\n  // };\n\n  // fetchMovieDetalis();\n\n  // console.log(images);\n  // const changeImage = images.find(image => image.id === Number(movieId));\n  // console.log(movieId);\n  // console.log(changeImage);\n  // const { poster_path, title, vote_average, overview } = changeImage;\n\n  return (\n    <>\n      <button onClick={onGoBack}>Go back</button>\n      <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n      <h2>{title}</h2>\n      <p>User score: {vote_average}</p>\n      <h3>Overview </h3>\n      <p>{overview} </p>\n      <h4>Generes</h4>\n      <div>\n        {genres && genres.map(({ id, name }) => <span key={id}>{name}</span>)}\n      </div>\n      <h5>Additional information</h5>\n      <ul>\n        <li>\n          <NavLink to={'cast'}>Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to={'reviews'}>Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovieDetalis","useState","imagesId","setImagesId","movieId","useParams","useEffect","detalis","data","console","log","poster_path","title","vote_average","overview","genres","onClick","src","alt","map","id","name","to","Suspense","fallback"],"sourceRoot":""}