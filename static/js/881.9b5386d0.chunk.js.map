{"version":3,"file":"static/js/881.9b5386d0.chunk.js","mappings":"qPACA,EAAwB,sB,SCiExB,EA7De,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,iBAChB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAaF,EAAaG,IAAI,eAAiB,GAE/CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,iGAEPL,GAAgC,IAAlBL,EAAOW,OAFd,gCAGUb,EAAiBO,GAH3B,OAGHO,EAHG,OAITX,EAAUW,EAAKC,SAJN,uDAOXC,QAAQC,IAAR,MAPW,yBASXD,QAAQC,IAAI,WATD,4EAAH,qDAYZL,GACD,GAAE,CAACV,EAAQK,EAAYP,IAaxB,OACE,iBAAKkB,UAAWC,EAAhB,WACE,kBAAMC,SAPS,SAAAC,GACjBA,EAAMC,iBACNjB,EAAaE,EACd,EAIG,WACE,kBACEgB,KAAK,OACLC,MAAOjB,EACPkB,SAjBa,SAAAJ,GACQ,KAAvBA,EAAMK,OAAOF,MACflB,EAAgB,CAAC,GACZA,EAAgB,CAAEC,WAAYc,EAAMK,OAAOF,OACnD,EAcOG,YAAY,qGACZC,aAAa,SAEf,mBAAQL,KAAK,SAAb,gDAEF,wBACGrB,GACCA,EAAO2B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMzB,GAArC,UACE,uBAAIsB,OAFCD,EADA,QAUpB,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"Movies_movie__HIhge\"};","import { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from 'pages/Movies/Movies.module.css';\n\nconst Movies = ({ fetchMovieSearch }) => {\n  const [images, setImages] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchName = searchParams.get('searchName') || '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        if (searchName && images.length === 0) {\n          const data = await fetchMovieSearch(searchName);\n          setImages(data.results);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        console.log('finally');\n      }\n    };\n    search();\n  }, [images, searchName, fetchMovieSearch]);\n\n  const handleChange = event => {\n    if (event.target.value === '') {\n      setSearchParams({});\n    } else setSearchParams({ searchName: event.target.value });\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    searchParams(searchName);\n  };\n\n  return (\n    <div className={css.movie}>\n      <form onSubmit={formSubmit}>\n        <input\n          type=\"text\"\n          value={searchName}\n          onChange={handleChange}\n          placeholder=\"Введи назву фільму\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">Пошук</button>\n      </form>\n      <ul>\n        {images &&\n          images.map(({ id, title }) => (\n            <li key={id}>\n              <NavLink to={`${id}`} state={{ from: location }}>\n                <p>{title}</p>\n              </NavLink>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  fetchMovieSearch: PropTypes.func.isRequired,\n};\n"],"names":["fetchMovieSearch","useState","images","setImages","useSearchParams","searchParams","setSearchParams","searchName","get","location","useLocation","useEffect","search","length","data","results","console","log","className","css","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","autoComplete","map","id","title","to","state","from"],"sourceRoot":""}