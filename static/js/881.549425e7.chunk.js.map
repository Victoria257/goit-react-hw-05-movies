{"version":3,"file":"static/js/881.549425e7.chunk.js","mappings":"qPACA,EAAwB,sB,SCgFxB,EA5Ee,SAAC,GAAoC,IAAlCA,EAAiC,EAAjCA,iBAAkBC,EAAe,EAAfA,SAClC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA8CJ,EAAAA,EAAAA,WAAS,GAAvD,eAAOK,EAAP,KAAwBC,EAAxB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAaF,EAAaG,IAAI,eAAiB,GAE/CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,iGAEPZ,GAA0B,IAAlBF,EAAOe,OAFR,gCAGUlB,EAAiBK,GAH3B,OAGHc,EAHG,OAITf,EAAUe,EAAKC,SAJN,uDAOXC,QAAQC,IAAR,MAPW,yBASXD,QAAQC,IAAI,WATD,4EAAH,qDAYRV,GACFN,EAAQM,GACRK,IACAT,GAAmB,IACVD,IACTU,IACAT,GAAmB,GAEtB,GAAE,CAACL,EAAQE,EAAML,EAAkBO,EAAiBK,IAkBrD,OACE,iBAAKW,UAAWC,EAAhB,WACE,kBAAMvB,SAbS,SAAAwB,GACjBA,EAAMC,iBACNzB,EAASI,GACI,KAATA,EACFM,EAAgB,CAAC,IAEjBA,EAAgB,CAAEC,WAAYP,IAC9BG,GAAmB,GAEtB,EAIG,WACE,kBACEH,KAAK,OACLsB,KAAK,OACLC,MAAOvB,EACPwB,SAvBa,SAAAJ,GACnB,IAAQG,EAAUH,EAAMK,cAAhBF,MACRtB,EAAQsB,EACT,EAqBOG,YAAY,qGACZC,aAAa,SAEf,mBAAQL,KAAK,SAAb,gDAEF,wBACGxB,GACCA,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMxB,GAAlC,UACE,uBAAIqB,OAFCD,EADA,QAUpB,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"Movies_movie__HIhge\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from 'pages/Movies/Movies.module.css';\n\nconst Movies = ({ fetchMovieSearch, onSubmit }) => {\n  const [images, setImages] = useState([]);\n  const [name, setName] = useState('');\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchName = searchParams.get('searchName') || '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        if (name && images.length === 0) {\n          const data = await fetchMovieSearch(name);\n          setImages(data.results);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        console.log('finally');\n      }\n    };\n    if (searchName) {\n      setName(searchName);\n      search();\n      setIsFormSubmitted(true);\n    } else if (isFormSubmitted) {\n      search();\n      setIsFormSubmitted(false);\n    }\n  }, [images, name, fetchMovieSearch, isFormSubmitted, searchName]);\n\n  const handleChange = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    onSubmit(name);\n    if (name === '') {\n      setSearchParams({});\n    } else {\n      setSearchParams({ searchName: name });\n      setIsFormSubmitted(true);\n    }\n  };\n\n  return (\n    <div className={css.movie}>\n      <form onSubmit={formSubmit}>\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Введи назву фільму\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">Пошук</button>\n      </form>\n      <ul>\n        {images &&\n          images.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <p>{title}</p>\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  fetchMovieSearch: PropTypes.func.isRequired,\n};\n"],"names":["fetchMovieSearch","onSubmit","useState","images","setImages","name","setName","isFormSubmitted","setIsFormSubmitted","useSearchParams","searchParams","setSearchParams","searchName","get","location","useLocation","useEffect","search","length","data","results","console","log","className","css","event","preventDefault","type","value","onChange","currentTarget","placeholder","autoComplete","map","id","title","to","state","from"],"sourceRoot":""}